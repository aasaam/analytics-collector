worker_processes ${ASM_NGX_WORKER_PROCESSES};
worker_rlimit_nofile ${ASM_NGX_WORKER_RLIMIT_NOFILE};
error_log /dev/stdout ${ASM_NGX_ERROR_LOG_LEVEL};

events {
  worker_connections ${ASM_NGX_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

http {

  error_log /dev/stdout ${ASM_NGX_ERROR_LOG_LEVEL};

  default_type application/octet-stream;
  include /defaults/mime.types.conf;
  include /defaults/charset.conf;
  include /defaults/logformat.conf;
  include /defaults/http.misc.conf;
  include /defaults/gzip.conf;

  ${ASM_NGX_ACCESS_LOG_COMMENT} access_log /dev/stdout jsonlog;

  client_body_timeout 10;
  client_max_body_size 1m;
  directio 1m;
  keepalive_requests 102400;
  keepalive_timeout 30;
  sendfile_max_chunk 1m;
  send_timeout 2;

  # map_hash_bucket_size 265;
  # map_hash_max_size 8192;

  proxy_buffers 4 128k;
  proxy_buffer_size 128k;

  proxy_cache_path /nginx-tmpfs
    levels=1:2
    keys_zone=PROXY_CACHE:1m
    use_temp_path=off
    max_size=16m
    inactive=30m;

  server {

    listen 80 default_server;
    listen 443 ssl http2 default_server;

    ssl_certificate /cert/fullchain.pem;
    ssl_certificate_key /cert/privkey.pem;
    ssl_trusted_certificate /cert/chain.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:NGX_ANALYTICS:12m;
    ssl_session_tickets off;

    ${ASM_NGX_SSL_PROF_LEG_COMMENT} include /defaults/ssl.leg.conf;
    ${ASM_NGX_SSL_PROF_INT_COMMENT} include /defaults/ssl.int.conf;
    ${ASM_NGX_SSL_PROF_MOD_COMMENT} include /defaults/ssl.mod.conf;

    ssl_stapling on;
    ssl_stapling_verify on;

    server_name _;

    include /defaults/server_real_ip.conf;

    if ($request_method = 'TRACE') {
      return 405;
    }

    location = /stub_status {
      include /defaults/monitoring.allow.conf;
      deny all;
      stub_status on;
      access_log off;
    }

    location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /";
    }

    location = /favicon.ico {
      add_header 'content-type' 'text/plain' always;
      return 404 '404';
    }

    location = /metrics {
      include /defaults/monitoring.allow.conf;
      deny all;
      access_log off;
      include /defaults/proxy_headers.conf;
      proxy_pass ${ASM_NGX_UPSTREAM};
    }

    location / {
      include /defaults/cors.conf;
      # proxy_cache PROXY_CACHE;
      include /defaults/proxy_headers.conf;
      proxy_pass ${ASM_NGX_UPSTREAM};
    }
  }
}

load_module "/usr/lib/nginx/modules/ndk_http_module.so";

# enabled modules
load_module "/usr/lib/nginx/modules/ngx_http_brotli_filter_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_brotli_static_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_geoip2_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so";

user nginx;
pcre_jit on;
worker_processes ${ASM_NGX_EXTRA_WORKER_PROCESSES};
worker_rlimit_nofile ${ASM_NGX_EXTRA_WORKER_RLIMIT_NOFILE};
error_log /dev/stdout ${ASM_NGX_EXTRA_ERROR_LOG_LEVEL};

events {
  worker_connections ${ASM_NGX_EXTRA_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

http {
  error_log /dev/stdout ${ASM_NGX_EXTRA_ERROR_LOG_LEVEL};

  include /.defaults/http.conf;

  include /upstream.conf;

  client_body_timeout  ${ASM_NGX_EXTRA_CLIENT_BODY_TIMEOUT};
  client_header_timeout ${ASM_NGX_EXTRA_CLIENT_HEADER_TIMEOUT};
  keepalive_requests ${ASM_NGX_EXTRA_KEEPALIVE_REQUESTS};
  keepalive_timeout ${ASM_NGX_EXTRA_KEEPALIVE_TIMEOUT};
  send_timeout ${ASM_NGX_EXTRA_SEND_TIMEOUT};
  client_body_buffer_size ${ASM_NGX_EXTRA_CLIENT_BODY_BUFFER_SIZE};
  client_header_buffer_size ${ASM_NGX_EXTRA_CLIENT_HEADER_BUFFER_SIZE};
  large_client_header_buffers ${ASM_NGX_EXTRA_LARGE_CLIENT_HEADER_BUFFERS};
  client_max_body_size ${ASM_NGX_EXTRA_CLIENT_MAX_BODY_SIZE};

  variables_hash_max_size ${ASM_NGX_EXTRA_VARIABLES_HASH_MAX_SIZE};

  proxy_buffering on;
  proxy_buffers 16 128k;
  proxy_buffer_size 128k;
  proxy_http_version 1.1;
  proxy_read_timeout 20s;
  proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_429;
  proxy_cache_methods GET HEAD;
  proxy_cache_valid 200 206 301 10m;
  proxy_cache_lock_timeout 0s;
  proxy_cache_lock_age 60s;
  proxy_cache_lock on;
  proxy_request_buffering off;

  # proxy cache
  proxy_cache_path /cache-fast levels=1:2 keys_zone=PROXY_CACHE_FAST:1m use_temp_path=off max_size=${ASM_NGX_EXTRA_PROXY_CACHE_FAST_SIZE} inactive=10m;

  more_set_headers "Server: aasaam";

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  map $status $loggable {
    ~^[45]  1;
    default 0;
  }

  server {

    listen 80 default_server;
    listen 443 ssl http2 default_server;

    server_name _;

    access_log off;

    ssl_certificate /cert/fullchain.pem;
    ssl_certificate_key /cert/privkey.pem;
    ssl_trusted_certificate /cert/chain.pem;
    ssl_dhparam /cert/dhparam.pem;

    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_session_cache shared:AnalyticsNginx:12m;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
    ssl_prefer_server_ciphers on;

    location = /stub_status {
      allow 127.0.0.0/8;
      allow 192.168.0.0/16;
      allow 172.16.0.0/12;
      deny all;
      stub_status on;
    }

    location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /";
    }

    location = /favicon.ico {
      more_set_headers 'Content-Type: text/plain';
      more_set_headers 'Cache-Control: max-age=604800';
      return 410 '410';
    }

    location / {
      if ($request_method = 'OPTIONS') {
        more_set_headers 'Access-Control-Allow-Origin: *';
        more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS';
        more_set_headers 'Access-Control-Max-Age: 600';
        more_set_headers 'Content-Type: text/plain';
        more_set_headers 'Content-Length: 0';
        return 204;
      }

      if ($request_method = 'POST') {
        more_set_headers 'Access-Control-Allow-Origin: *';
        more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS';
      }

      if ($request_method = 'GET') {
        more_set_headers 'Access-Control-Allow-Origin: *';
        more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS';
      }

      # proxy headers
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        'upgrade';
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

      proxy_cache PROXY_CACHE_FAST;
      proxy_pass http://producers;

      ${ASM_NGX_EXTRA_ACCESS_LOG_COMMENT} access_log /dev/stdout http_jsonlog if=$loggable;
    }
  }
}
